(()=>{let e,t=[];const d={newProject:function(d){const s=(e=>{let t=[];return{addTodo:e=>{t.push(e)},getTodos:()=>t,title:e,deleteTodo:e=>{t.splice(t.indexOf(e),1),t.reduce(((e,t)=>(t.setPriority(e),e+1)),1)}}})(d);e=s,t.push(s),n.renderProjects()}},n=(()=>{const e=document.querySelector("#project_list");return document.querySelector("#todo_list"),{renderProjects:function(){e.textContent="",t.forEach((t=>{!function(t){const d=s.buildProject(t);e.appendChild(d)}(t)}))}}})(),s=(()=>{function t(e,t,d=null){const n=document.createElement(e);return n.classList.add(...t),d&&function(e,t){t.forEach((t=>{e.appendChild(t)}))}(n,d),n}function d(e){const t=document.createElement("i");return t.classList.add("fas",`fa-${e}`),t}return{buildTodo:function(e){},buildProject:function(s){const o=t("button",["proj-btn","sel-btn"]);o.textContent=s.title,o.addEventListener("click",(()=>{e=s,n.renderTodos(s)}));const r=t("button",["proj-btn","edit-btn"],[d("edit")]),i=t("button",["proj-btn","del-btn"],[d("trash-alt")]);return t("div",["proj"],[o,r,i])}}})(),o=document.forms.todoForm,r=document.querySelector("#new_todo"),i=document.forms.projForm,c=document.querySelector("#new_proj");c.addEventListener("click",(()=>{c.classList.add("hidden"),i.parentNode.classList.remove("hidden"),i.children[0].focus()})),i.addEventListener("keydown",(e=>{"Escape"===e.key&&(c.classList.remove("hidden"),i.parentNode.classList.add("hidden"),i.reset())})),i.addEventListener("focusout",(e=>{c.classList.remove("hidden"),i.parentNode.classList.add("hidden"),i.reset()})),i.addEventListener("submit",(()=>{c.classList.remove("hidden"),i.parentNode.classList.add("hidden"),d.newProject(i.title.value),i.reset()})),r.addEventListener("click",(()=>{r.classList.add("hidden"),o.parentNode.classList.remove("hidden")})),o.addEventListener("reset",(()=>{r.classList.remove("hidden"),o.parentNode.classList.add("hidden")})),o.addEventListener("keydown",(e=>{"Escape"===e.key&&(r.classList.remove("hidden"),o.parentNode.classList.add("hidden"))})),o.addEventListener("submit",(()=>{r.classList.remove("hidden"),o.parentNode.classList.add("hidden"),d.newTodo(e,o.title.value,o.date.value,o.done.checked,o.desc.value),o.reset()})),d.newProject("Proj 1")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,